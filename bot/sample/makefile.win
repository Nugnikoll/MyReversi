WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres
RM = del /q

INC = 
CFLAGS = 
CXXFLAGS = -Wall -std=c++11 -O2 -DUSE_ASM -DUSE_ASM_BMI2 -DUSE_ASM_AVX2 -DUSE_TERMINATE
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = -pthread

SRCDIR = ../../cpp/#

OBJDIR = obj/

OUTDIR = ../

SRC = $(wildcard $(SRCDIR)*.cc) main.cc
OBJ = $(patsubst %.cc, %.o, $(patsubst $(SRCDIR)%, $(OBJDIR)%, $(SRC)))
OUT = $(OUTDIR)reversi

.PHONY: all clean before

all: before $(OUT)

clean:
	-$(RM) $(subst /,\,$(OBJDIR))*.o
	-$(RM) $(addprefix $(subst /,\,$(OUTDIR)), *.o *.exe *.dll *.so *.pyd *.log *.out) $(subst /,\,$(OUT))

before:
	if not exist $(subst /,\,$(OBJDIR)) mkdir $(subst /,\,$(OBJDIR))
	if not exist $(subst /,\,$(OUTDIR)) mkdir $(subst /,\,$(OUTDIR))

$(OUT): $(OBJ)
	$(LD) $(LDFLAGS) $(OBJ) -o $@

$(OBJDIR)board.o: $(SRCDIR)board.cc $(wildcard $(SRCDIR)*.h)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(OBJDIR)flip.o: $(SRCDIR)flip.cc $(wildcard $(SRCDIR)*.h)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(OBJDIR)search.o: $(SRCDIR)search.cc $(wildcard $(SRCDIR)*.h)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(OBJDIR)sample.o: $(SRCDIR)sample.cc $(wildcard $(SRCDIR)*.h)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(OBJDIR)pattern.o: $(SRCDIR)pattern.cc $(wildcard $(SRCDIR)*.h)
	$(CXX) $(CXXFLAGS) -c $< -o $@

main.o: main.cc $(wildcard $(SRCDIR)*.h)
	$(CXX) $(CXXFLAGS) -c $< -o $@

